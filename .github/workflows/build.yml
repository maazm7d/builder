name: Build Kernel

on:
  workflow_dispatch:
    inputs:
      BRANCH:
        description: Kernel branch
        default: 'main'
        required: true
      AK3_NAME:
        description: Enter custom name for AnyKernel3 artifact
        required: true
      UPLOAD_TO_TG:
        description: Upload to Telegram
        type: boolean
      CHANGELOG:
        description: Enter changelog
        default: 'No changelog provided'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 📁 Checkout Kernel Source
    - uses: actions/checkout@v4
      with:
        repository: maazm7d/kernel_samsung_m12
        path: kernel_root
        ref: ${{ github.event.inputs.BRANCH }}
        show-progress: false
        fetch-depth: 1

    # 🛠️ Install Dependencies
    - name: Install Packages
      run: |
        sudo apt update
        sudo apt install -y bc cpio flex bison aptitude git python-is-python3 tar perl wget curl lz4
        sudo aptitude install -y libssl-dev

    # 🧰 Fetch Toolchains
    - name: Fetch Toolchains
      run: |
        mkdir toolchains && cd toolchains
        git clone --depth=1 -b clang-11 https://github.com/rsuntk/toolchains.git clang
        git clone --depth=1 -b androidcc-4.9 https://github.com/rsuntk/toolchains.git google
      working-directory: kernel_root

    # 🌍 Set Timezone
    - run: sudo ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime

    # ⚙️ Clone KernelSU
    - name: Setup KernelSU
      run: curl -LSs https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh | bash -s next-susfs
      working-directory: kernel_root

    # 🔨 Kernel Build
    - name: Build Kernel
      id: build
      run: |
        export PATH=$(pwd)/toolchains/clang/bin:$PATH
        export CROSS_COMPILE=$(pwd)/toolchains/google/bin/aarch64-linux-android-
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export KBUILD_BUILD_USER="maaz"
        export KBUILD_BUILD_HOST="github"
        export BUILD_START=`date`
        export IS_CI=true

        export DEFCONFIG="exynos850-m12nsxx_defconfig"
        export DEVICE_ID="M12"

        bash $(pwd)/build_kernel.sh kernel --jobs $(nproc --all) $DEFCONFIG

        echo "TITLE=Galaxy M12 Kernel" >> $GITHUB_ENV

        mv .config build_config.txt
        gitsha=$(git rev-parse --short HEAD)
        details="$(make kernelversion)-M12_${gitsha}-$(date +'%Y%m%d%H%M%S')"
        echo "buildDetails=$details" >> $GITHUB_OUTPUT

        clang --version | grep version >> buildDetails.txt
        echo -e "\nBuild: $(date)\nDefconfig: exynos850-m12nsxx_defconfig\nChangelog: ${{ github.event.inputs.CHANGELOG }}" >> buildDetails.txt
      working-directory: kernel_root

    # 📤 Uploads
    - uses: actions/upload-artifact@v4
      with:
        name: Config-${{ steps.build.outputs.buildDetails }}
        path: kernel_root/build_config.txt

    - uses: actions/upload-artifact@v4
      with:
        name: Kernel-${{ steps.build.outputs.buildDetails }}
        path: |
          kernel_root/arch/arm64/boot/Image.gz
          kernel_root/arch/arm64/boot/dts/exynos/*.dtb
          kernel_root/arch/arm64/boot/dts/samsung/*.dtb

    - name: Package AnyKernel3
      run: |
        cp kernel_root/arch/arm64/boot/Image kernel_root/anykernel/
        cd kernel_root/anykernel
        zip -r9 "../AnyKernel3-${{ github.event.inputs.AK3_NAME }}.zip" .
      working-directory: kernel_root

    - uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-${{ github.event.inputs.AK3_NAME }}
        path: kernel_root/AnyKernel3-${{ github.event.inputs.AK3_NAME }}.zip
        compression-level: 9

    # 🚀 Upload to Telegram (Optional)
    - name: Upload to Telegram
      if: github.event.inputs.UPLOAD_TO_TG == 'true'
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      run: |
        git clone https://github.com/maazm7d/builder.git --depth=1 tmp
        bash ./tmp/xedbot.sh "./kernel_root/AnyKernel3-${{ github.event.inputs.AK3_NAME }}.zip" "`cat kernel_root/buildDetails.txt`"
        rm -rf tmp
