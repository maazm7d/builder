name: Build Kernel

on:
  workflow_dispatch:
    inputs:
      BRANCH:
        description: Kernel branch
        default: 'main'
        required: true
      AK3_NAME:
        description: AnyKernel3 ZIP name
        required: true
      KERNELSU_NEXT:
        description: Use KernelSU-Next?
        type: boolean
      SELINUX_PERMISSIVE:
        description: Permissive SELinux?
        type: boolean
      UPLOAD_TO_TG:
        description: Upload to Telegram?
        type: boolean
      UPLOAD_TO_GH:
        description: Upload to GitHub Release?
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Kernel Source
        uses: actions/checkout@v4
        with:
          repository: maazm7d/kernel_samsung_a12
          ref: ${{ github.event.inputs.BRANCH }}
          path: kernel_root
          fetch-depth: 0

      - name: Setup Dependencies & Toolchains
        run: |
          sudo apt update && sudo apt install -y bc cpio flex bison aptitude git python-is-python3 tar perl wget curl lz4
          sudo aptitude install -y libssl-dev
          sudo ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime

          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          cd kernel_root && git fetch --tags --force

          mkdir -p kernel_root/toolchains && cd kernel_root/toolchains
          git clone --depth=1 -b clang-11 https://github.com/rsuntk/toolchains.git clang
          git clone --depth=1 -b androidcc-4.9 https://github.com/rsuntk/toolchains.git google

      - name: Clone KernelSU-Next (if needed)
        if: ${{ github.event.inputs.KERNELSU_NEXT == 'true' }}
        run: |
          cd kernel_root
          curl -LSs https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next-susfs/kernel/setup.sh | bash -s next-susfs

      - name: Run Kernel Build Script
        run: |
          chmod +x kernel_root/ci_build.sh
          kernel_root/ci_build.sh "${{ github.event.inputs.SELINUX_PERMISSIVE }}" "${{ github.event.inputs.KERNELSU_NEXT }}" "${{ github.event.inputs.AK3_NAME }}"

      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-${{ github.event.inputs.AK3_NAME }}
          path: |
            kernel_root/build_config.txt
            kernel_root/buildDetails.txt
            kernel_root/arch/arm64/boot/Image.gz
            kernel_root/arch/arm64/boot/dts/**.dtb
            kernel_root/anykernel3/AnyKernel3-${{ github.event.inputs.AK3_NAME }}.zip

      - name: Upload to Telegram
        if: ${{ github.event.inputs.UPLOAD_TO_TG == 'true' }}
        env:
          CHAT_ID: ${{ secrets.CHAT_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          cd kernel_root
          git clone --depth=1 -b telegram https://github.com/maazm7d/builder.git i && cp i/xedbot.sh . && rm -rf i
          bash xedbot.sh "anykernel3/AnyKernel3-${{ github.event.inputs.AK3_NAME }}.zip" "$(cat buildDetails.txt)"

      - name: Release to GitHub
        if: ${{ github.event.inputs.UPLOAD_TO_GH == 'true' }}
        id: release
        run: |
          cd kernel_root
          TAG_NAME="build-$(date +'%Y%m%d')-$(git rev-parse --short HEAD)"
          CHANGELOG=$(git log -1 --pretty=format:"- %s (%an)")
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV

      - name: Upload to GitHub Release
        if: ${{ github.event.inputs.UPLOAD_TO_GH == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.TAG_NAME }}
          body: ${{ env.CHANGELOG }}
          files: kernel_root/anykernel3/AnyKernel3-${{ github.event.inputs.AK3_NAME }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
